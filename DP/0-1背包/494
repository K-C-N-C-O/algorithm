class Solution {
    //p
    //s
    //p-(s-p)=t
    //p=(s+t)/2
    int[][] memo;
    int[] nums;
    public int findTargetSumWays(int[] nums, int target) {
        for(int x:nums){
            target+=x;
        }
        if(target<0||target%2==1){
            return 0;
        }
        target/=2;
        this.nums=nums;
        int n=nums.length;
        memo=new int[n][target+1];
        for(int i=0;i<n;i++){
            Arrays.fill(memo[i],-1);
        }
        return dfs(n-1,target);


    }
    public int dfs(int i,int c){
        if(i<0){
            return c==0?1:0;
        }
        if(memo[i][c]!=-1){
            return memo[i][c];
        }
        if(nums[i]>c){
            return memo[i][c]=dfs(i-1,c);
        }
        return memo[i][c]=dfs(i-1,c)+dfs(i-1,c-nums[i]);
    }
}
