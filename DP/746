//递推
class Solution {
    public int minCostClimbingStairs(int[] cost) {
        int n=cost.length;
        int[] f=new int[n+1];
        f[0]=f[1]=0;
        for(int i=2;i<n+1;i++){
            f[i]=Math.min(f[i-1]+cost[i-1],f[i-2]+cost[i-2]);
        }
        return f[n];


    }
}

//递推优化

class Solution {
    public int minCostClimbingStairs(int[] cost) {
        int n=cost.length;
        int f0=0,f1=0;
        for(int i=2;i<n+1;i++){
            int new_f=Math.min(f1+cost[i-1],f0+cost[i-2]);
            f0=f1;
            f1=new_f;
        }
        return f1;


    }
}
