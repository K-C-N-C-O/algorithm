class Solution {
    public int longestCommonSubsequence(String text1, String text2) {
        int x=text1.length(),y=text2.length();
        int[][] f=new int[x+1][y+1];
        for(int i=0;i<x;i++){
            for(int j=0;j<y;j++){
                if(text1.charAt(i)==text2.charAt(j)){
                    f[i+1][j+1]=f[i][j]+1;
                }else{
                    f[i+1][j+1]=Math.max(f[i+1][j],f[i][j+1]);
                }
            }
        }
        return f[x][y];

    }
    // private int dfs(int i,int j){
    //     if(i<0||j<0){
    //         return 0;
    //     }
    //     if(memo[i][j]!=-1){
    //         return memo[i][j];
    //     }
    //     if(text1.charAt(i)==text2.charAt(j)){
    //         return memo[i][j]=dfs(i-1,j-1)+1;
    //     }
    //     return memo[i][j]=Math.max(dfs(i-1,j),dfs(i,j-1));
    // }
}
