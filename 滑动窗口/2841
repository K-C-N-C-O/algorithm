class Solution {
    public long maxSum(List<Integer> nums, int m, int k) {
        var a=nums.stream().mapToInt(i->i).toArray();
        Map<Integer,Integer> window=new HashMap<>();
        int n=nums.size();
        long sum=0,ans=0;
        for (int i = 0; i < k - 1; i++) { // 先统计 k-1 个数
            sum += a[i];
            window.put(a[i],window.getOrDefault(a[i],0)+1);
            
        }

        for(int i=k-1;i<n;i++){
            sum+=a[i];
            window.put(a[i],window.getOrDefault(a[i],0)+1);
            if(window.size()>=m){
                ans=Math.max(ans,sum);
            }
            int out=a[i-k+1];
            sum-=out;
            window.put(out,window.get(out)-1);
            if(window.get(out)==0){
                window.remove(out);
            }
        }
        return ans;

    }
}
